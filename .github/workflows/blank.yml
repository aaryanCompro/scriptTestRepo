name: Update New Relic Synthetic Monitor Script

on:
  push:
    paths:
      - seleniumScriptTeacher.js

jobs:
  update-monitor-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Encode seleniumScriptTeacher.js to Base64
        id: encode-script
        run: |
          if [ ! -f "seleniumScriptTeacher.js" ]; then
            echo "Error: seleniumScriptTeacher.js file not found."
            exit 1
          fi
          base64_encoded_script=$(base64 -w 0 seleniumScriptTeacher.js)
          echo "encoded_script=$base64_encoded_script" >> $GITHUB_ENV

      - name: Update New Relic Synthetic Monitor Script
        env:
          API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
          API_ENDPOINT: ${{ secrets.NEW_RELIC_API_ENDPOINT }}
          MONITOR_UUID: ${{ secrets.MONITOR_UUID }}
          BASE64_SCRIPT: ${{ env.encoded_script }}
        run: |
          # Prepare the script payload
          scriptPayload="{\"scriptText\": \"$BASE64_SCRIPT\"}"

          # Debug: Output the final URL and payload
          echo "Request URL: $API_ENDPOINT/v3/monitors/$MONITOR_UUID/script"
          echo "Payload: $scriptPayload"

          # Make the PUT request to update the monitor script
          response=$(curl -s -o response.json -w "%{http_code}" -X PUT \
            -H "Api-Key:$API_KEY" \
            -H 'Content-Type: application/json' \
            "$API_ENDPOINT/v3/monitors/$MONITOR_UUID/script" \
            -d "$scriptPayload")

          # Check response and output the result
          if [ "$response" -eq 204 ]; then
            echo "New Relic monitor script updated successfully."
          else
            echo "Failed to update the New Relic monitor script. Response:"
            cat response.json
            exit 1
          fi
